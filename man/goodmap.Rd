% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/goodmap.R
\name{goodmap}
\alias{goodmap}
\title{The \code{goodmap} function is designed to create interactive PNG Map or GIF Map
The \code{goodmap} function creates interactive map animations from a provided data file.
It supports two types of maps: \code{point} and \code{polygon}.
The function can visualize data by either plotting points based on geographical coordinates
or highlighting regions based on their administrative boundaries (province or city level).
Additionally, the function can generate animated that showcase changes over time.}
\usage{
goodmap(
  data_file,
  type = "point",
  level = NULL,
  animate = FALSE,
  animate_var = "year_set",
  map_center = c(35.8617, 104.1954),
  zoom_level = 4,
  custom_colors = NULL,
  base_radius = 1,
  radius_factor = 1,
  legend_opacity = 0.7,
  width = 800,
  height = 900
)
}
\arguments{
\item{data_file}{Dataframe.
When generate point map, \code{data_file} should include required columns such
as \code{g_lat} and \code{g_lon}.
When generate polygon map, \code{data_file} should include required columns such
as \code{prov} or \code{city}.
The \code{prov} columns must be complete names, such as “内蒙古自治区” instead of “内蒙古”.
If there is only incomplete names or geocodes in your data_file, we recommend you to use function \code{regioncode}
as a one-step solution to these conversion from incomplete names.
Ensure the file is formatted correctly with appropriate column headers.}

\item{type}{A string specifying the type of map to generate. Options are \code{point}for point
maps using \code{g_lat} and \code{g_lon},
or \code{polygon} for maps with administrative boundaries.}

\item{level}{A string specifying the level of administrative boundaries for polygon maps.
Acceptable values are \code{province} or \code{city}. This parameter is required if \code{type} is \code{polygon}.}

\item{animate}{A logical value indicating whether to generate an animation from the maps. The default is FALSE.
If animate is FALSE, the map for the latest year will be generated as a PNG file.
If animate is TRUE, an animation will be generated from all panel data.}

\item{animate_var}{A string specifying the variable to animate over. The default is \code{year_set}.}

\item{map_center}{A numeric vector of length 2 specifying the latitude and longitude
for the center of the map view. Default is \code{c(35.8617, 104.1954)}, which
is approximately the center of China.}

\item{zoom_level}{A numeric value specifying the zoom level for the map. Default is 4.}

\item{custom_colors}{A vector of colors for customizing the color gradient. Default is \code{NULL},
which uses the predefined color palette.}

\item{base_radius}{A numeric value specifying the base radius for point markers on point maps. Default is 1.}

\item{radius_factor}{A numeric value specifying the multiplier for adjusting the radius of
point markers based on the type. Default is 1.}

\item{legend_opacity}{A numeric value specifying the opacity of the legend. Default is 0.7.}

\item{width}{A numeric value specifying the width of the map images. Default is 800.}

\item{height}{A numeric value specifying the height of the map images. Default is 900.}
}
\value{
Image in the viewer.
}
\description{
If the map type is \code{point}, the color and size of the points will be determined by the
\code{type} column in the data file.
If the map type is \code{polygon}, the color of the polygons will be determined by the average
value of the \code{variable} column
for each city or province in the data file.
}
\examples{
data_file <- data.frame(
  name = c(
    "中国共产党历史展览馆", "中央礼品文物管理中心", "中国美术馆",
    "中国电影博物馆", "中国邮政邮票博物馆", "中国钱币博物馆"
  ),
  year_set = c(2021, 2021, 2021, 2021, 2021, 2021),
  g_lat = c(40.00379, 39.89785, 39.92535, 39.99636, 39.91081, 39.90215),
  g_lon = c(116.3994, 116.4109, 116.4090, 116.5206, 116.4311, 116.3949),
  prov = c("北京市", "北京市", "北京市", "北京市", "北京市", "北京市"),
  city = c("北京", "北京", "北京", "北京", "北京", "北京"),
  type = c(7, 7, 8, 8, 8, 8)
)
Sys.setlocale("LC_CTYPE", "en_US.UTF-8")
goodmap(data_file = data_file,
  type = "point",
  animate = TRUE,
  animate_var = "year_set",
  custom_colors = "pink", 
  base_radius = 1, radius_factor = 1)

}
