% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/goodmap.R
\name{goodmap}
\alias{goodmap}
\title{The \code{goodmap} Function for Generating Maps and Animations
The \code{goodmap} function is designed to create interactive maps and animations
based on the provided file. It supports two types of maps: \code{point} and \code{polygon}.
The function can visualize data by either plotting points based on geographical coordinates
or highlighting regions based on their administrative boundaries (province or city level).
Additionally, the function can generate animated that showcase changes over time.}
\usage{
goodmap(
  data_file,
  type = "point",
  level = NULL,
  animate = FALSE,
  animate_var = NULL,
  years = NULL,
  saveDir = "output",
  map_center = c(35.8617, 104.1954),
  zoom_level = 4,
  palette = "main",
  reverse_palette = TRUE,
  base_radius = 1,
  radius_factor = 1,
  legend_opacity = 0.7,
  width = 800,
  height = 900
)
}
\arguments{
\item{data_file}{A string specifying the path to the CSV file containing the data.
The file should include required columns such as \code{g_lat} and \code{g_lon} for point maps,
and \code{prov} or \code{city} column for polygon maps.
The function uses the \code{read.csv} function from the \code{readr} package to load the data.
Ensure the file is formatted correctly with appropriate column headers.}

\item{type}{A string specifying the type of map to generate. Options are \code{point}for point maps using \code{g_lat} and \code{g_lon},
or \code{polygon} for maps with administrative boundaries.}

\item{level}{A string specifying the level of administrative boundaries for polygon maps.
Acceptable values are \code{province} or \code{city}. This parameter is required if \code{type} is \code{polygon}.}

\item{animate}{A logical value indicating whether to generate an animation from the maps.}

\item{animate_var}{A string specifying the variable to animate over (typically \code{year}).}

\item{years}{A numeric vector specifying the years for which maps should be generated.
Each map will be saved as a separate image file.}

\item{saveDir}{A string specifying the directory where map images and animations will be saved.
The default is \code{output}.}

\item{map_center}{A numeric vector of length 2 specifying the latitude and longitude
for the center of the map view. Default is \code{c(35.8617, 104.1954)}, which is approximately the center of China.}

\item{zoom_level}{A numeric value specifying the zoom level for the map. Default is 4.}

\item{palette}{A string specifying the color palette to use for the map. Default is \code{main}.}

\item{reverse_palette}{A logical value indicating whether to reverse the color palette. Default is TRUE.}

\item{base_radius}{A numeric value specifying the base radius for point markers on point maps.
Default is 1.}

\item{radius_factor}{A numeric value specifying the multiplier for adjusting the radius of
point markers based on the type. Default is 1.}

\item{legend_opacity}{A numeric value specifying the opacity of the legend. Default is 0.7.}

\item{width}{A numeric value specifying the width of the saved map images. Default is 800.}

\item{height}{A numeric value specifying the height of the saved map images. Default is 900.}
}
\value{
The function saves the generated maps as PNG files in the specified \code{saveDir}
and, if \code{animate = TRUE}, creates an animated GIF showcasing changes over time.
}
\description{
If the map type is \code{point}, the color and size of the points will be determined by the \code{type} column in the data file.
If the map type is \code{polygon}, the color of the polygons will be determined by the average value of the \code{variable} column
for each city or province in the data file.
}
\examples{
data_file <- data.frame(
  name = c(
    "中国共产党历史展览馆", "中央礼品文物管理中心", "中国美术馆",
    "中国电影博物馆", "中国邮政邮票博物馆", "中国钱币博物馆"
  ),
  year_set = c(2021, 2021, 2021, 2021, 2021, 2021),
  g_lat = c(40.00379, 39.89785, 39.92535, 39.99636, 39.91081, 39.90215),
  g_lon = c(116.3994, 116.4109, 116.4090, 116.5206, 116.4311, 116.3949),
  prov = c("北京市", "北京市", "北京市", "北京市", "北京市", "北京市"),
  city = c("北京市", "北京市", "北京市", "北京市", "北京市", "北京市"),
  type = c(7, 7, 8, 8, 8, 8)
)
  csv_file_path <- file.path(getwd(), "data_file.csv")
  write.csv(data_file, csv_file_path, row.names = FALSE)
Sys.setlocale("LC_CTYPE", "en_US.UTF-8")
goodmap(data_file = csv_file_path,
  type = "point", animate = TRUE,
  animate_var = "year", years = 2021, base_radius = 1, radius_factor = 1
)

}
